---
import BaseLayout from "../../components/layout/BaseLayout.astro";
import Container from "../../components/ui/Container.astro";
import BaseHero from "../../components/shared/BaseHero.astro";
import Categories from "../../components/shared/Categories.astro";
import ContentCard from "../../components/shared/ContentCard.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

type Note = CollectionEntry<"notes">;

const notes = await getCollection("notes", ({ data }) => {
  return import.meta.env.PROD ? !data.draft : true;
});

const categories = [...new Set(notes.map((note: Note) => note.data.category))];
const sortedNotes = notes.sort((a: Note, b: Note) => 
  b.data.publishedAt.getTime() - a.data.publishedAt.getTime()
);

// Helper function to generate the correct note URL
const getNoteUrl = (note: Note) => {
  const category = note.data.category.toLowerCase();
  return `/notes/${note.id}`;
};
---

<BaseLayout title="Notes" description="Short-form thoughts and learnings">
  <Container>
    <BaseHero title="Notes" description="Short-form thoughts and learnings" />

    <Categories categories={categories} currentPath={Astro.url.pathname} basePath="notes" />

    <div class="content-grid">
      {sortedNotes.map((note) => (
        <ContentCard
          title={note.data.title}
          description={note.data.description}
          url={getNoteUrl(note)}
          date={note.data.publishedAt}
          tags={[note.data.category]}
          isExternal={false}
        />
      ))}
    </div>
  </Container>
</BaseLayout>

<style>
  .content-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
    margin-top: 2rem;
  }

  @media (max-width: 768px) {
    .content-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
