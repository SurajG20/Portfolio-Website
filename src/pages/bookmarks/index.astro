---
import BaseLayout from "../../components/layout/BaseLayout.astro";
import Categories from "../../components/shared/Categories.astro";
import ArticleCard from "../../components/ui/ArticleCard.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import BaseHero from "../../components/shared/BaseHero.astro";
import Container from "../../components/ui/Container.astro";
import ContentCard from "../../components/shared/ContentCard.astro";
type Bookmark = CollectionEntry<"bookmarks">;

const bookmarks = await getCollection("bookmarks");
const types = [...new Set(bookmarks.map((bookmark: Bookmark) => bookmark.data.type))];
const sortedBookmarks = bookmarks.sort(
  (a: Bookmark, b: Bookmark) => b.data.createdAt.getTime() - a.data.createdAt.getTime()
);
---

<BaseLayout title="Bookmarks" description="My collection of interesting reads and resources">
  <Container>
    <BaseHero title="Bookmarks" description="My collection of interesting reads and resources" />

    <Categories plural categories={types} currentPath={Astro.url.pathname} basePath="bookmarks" />

    <div class="content-grid">
      {sortedBookmarks.map((bookmark) => (
        <ContentCard
          title={bookmark.data.title}
          description={bookmark.data.description}
          url={bookmark.data.url}
          date={bookmark.data.createdAt}
          tags={[bookmark.data.type, `by ${bookmark.data.author}`]}
        />
      ))}
    </div>
  </Container>
</BaseLayout>

<style>
  .content-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
    margin-top: 2rem;
  }

  @media (max-width: 768px) {
    .content-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
